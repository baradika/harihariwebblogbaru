---
import { Image } from 'astro:assets';
import Card from './core/Card.astro';
import { getBackgroundColorByKey } from '../utils/color';
import lksIcon from '../assets/achievements/LKS.png';
import tjIcon from '../assets/achievements/TJ.png';
import techtonicIcon from '../assets/achievements/techtonic.png';
import breachIcon from '../assets/achievements/breach.png';
import uiuIcon from '../assets/achievements/uiu.png';

const { limit = 0 } = Astro.props as {
  limit?: number;
};

const achievementsModule = await import('../data/achievements.json');
let achievements = achievementsModule.default;

const iconMap: Record<string, any> = {
  '../../assets/achievements/LKS.png': lksIcon,
  '../../assets/achievements/TJ.png': tjIcon,
  '../../assets/achievements/techtonic.png': techtonicIcon,
  '../../assets/achievements/breach.png': breachIcon,
  '../../assets/achievements/uiu.png': uiuIcon,
};

achievements = achievements.sort((a, b) => b.id - a.id);

if (limit > 0) {
  achievements = achievements.slice(0, limit);
}
---

{
  achievements && (
    <div class="flex flex-col gap-2">
      {achievements.map((achievement) => (
        <Card>
          <div slot="content" class="flex flex-col sm:flex-row sm:items-center gap-3 sm:gap-4">
            <div class="flex items-center gap-3 flex-1">
              <Image
                src={iconMap[achievement.icon] || lksIcon}
                alt={achievement.title}
                width={80}
                height={80}
                quality="max"
                format="png"
                loading="eager"
                class="inline-block flex-shrink-0"
              />
              <div class="flex-1 min-w-0">
                <p class="font-medium">{achievement.title}</p>
                <p class="text-sm text-flexoki-light-tx-2 dark:text-flexoki-dark-tx-2">
                  {achievement.description}
                </p>
              </div>
            </div>
            <div class="flex items-center gap-2 flex-shrink-0 sm:flex-col sm:items-end">
              <span class={`text-xs font-medium px-2.5 py-0.5 rounded ${getBackgroundColorByKey(achievement.category)}`}>
                {achievement.category}
              </span>
              <span class="text-xs text-flexoki-light-tx-2 dark:text-flexoki-dark-tx-2">
                {achievement.date}
              </span>
            </div>
          </div>
        </Card>
      ))}
    </div>
  )
}