---
import type { CollectionEntry } from 'astro:content';
import Card from './core/Card.astro';
import { Icon } from 'astro-icon/components';
import { getBackgroundColorByCategory } from '../utils/color';

const { event } = Astro.props as { event: CollectionEntry<'eventChallenges'> };

const categoryIconMap: { [key: string]: string } = {
  crypto: 'lucide:lock',
  web: 'lucide:globe',
  pwn: 'lucide:skull',
  bin: 'lucide:skull',
  rev: 'lucide:eye',
  forensics: 'lucide:search',
  misc: 'lucide:apple',
};

const getIcon = (category: string) => {
  const categoryLowerCased = category?.toLowerCase() || '';
  const matchedKey = Object.keys(categoryIconMap).find((key) =>
    categoryLowerCased.includes(key)
  );

  return matchedKey ? categoryIconMap[matchedKey] : 'lucide:tag';
};

const { ...rest } = Astro.props;
---

<Card {...rest}>
  <div slot="content" class="flex flex-col gap-2">
    <p class="font-medium">{event.data.title}</p>
    <div class="flex flex-wrap items-center gap-2">
      {
        event.data.points !== -1 && (
          <span
            class="bg-flexoki-light-ui dark:bg-flexoki-dark-ui text-xs font-medium px-2.5 py-0.5 rounded"
          >
            {event.data.points} points
          </span>
        )
      }
      {
        event.data.solves !== -1 && (
          <span class="bg-flexoki-light-ui dark:bg-flexoki-dark-ui text-xs font-medium px-2.5 py-0.5 rounded">
            {event.data.solves} solves
          </span>
        )
      }
      {
        Array.isArray(event.data.category)
          ? event.data.category.map(
              (cat) =>
                cat.trim() !== '' && (
                  <span
                    class={`flex flex-row items-center gap-x-2 text-xs font-medium px-2.5 py-0.5 rounded
                  ${getBackgroundColorByCategory(cat)}
                `}
                  >
                    <Icon name={getIcon(cat)} />
                    {cat}
                  </span>
                )
            )
          : event.data.category &&
            event.data.category.trim() !== '' && (
              <span
                class={`flex flex-row items-center gap-x-2 text-xs font-medium px-2.5 py-0.5 rounded
                ${getBackgroundColorByCategory(event.data.category)}
              `}
              >
                <Icon name={getIcon(event.data.category)} class="text-xs" />
                {event.data.category}
              </span>
            )
      }
    </div>
  </div>
</Card>
