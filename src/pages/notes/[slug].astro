---
import { getCollection, render, type CollectionEntry } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import Prose from '../../components/core/Prose.astro';
import { getBackgroundColorByKey } from '../../utils/color';

export async function getStaticPaths() {
  const notes = await getCollection('notes');
  return notes.map((note) => {
    const slug = note.id.replace('.md', '');
    return {
      params: { slug },
      props: { note },
    };
  });
}

type Props = {
  note: CollectionEntry<'notes'>;
};

const { note } = Astro.props;
const { Content } = await render(note);

const pageTitle = `${note.data.title} - Notes`;
const pageDescription = note.data.description;
---

<MainLayout title={pageTitle} description={pageDescription}>
  <Prose>
    <div class="flex flex-wrap gap-2 mb-6 not-prose">
      {note.data.category && (
        <span class={`text-xs font-medium px-2.5 py-0.5 rounded ${getBackgroundColorByKey(String(note.data.category))}`}>
          {note.data.category}
        </span>
      )}
      {note.data.tags && Array.isArray(note.data.tags) && note.data.tags.map((tag) => (
        <span class="bg-flexoki-base-100 dark:bg-flexoki-base-900 text-xs font-medium px-2 py-1 rounded">
          #{tag}
        </span>
      ))}
      <span class="text-xs text-flexoki-light-tx-2 dark:text-flexoki-dark-tx-2 ml-auto">
        {note.data.date.toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'long', 
          day: 'numeric' 
        })}
      </span>
    </div>
    <Content />
  </Prose>
</MainLayout>
